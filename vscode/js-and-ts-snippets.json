{
    "Console Log": {
      "prefix": "clg",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "body": "console.log($0);",
      "description": "Print a console.log and stop tab inside method"
    },
    "Insert .map()": {
      "prefix": ".map",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "body": ".map($1 => {$0})",
      "description": "Print map method in js/ts files"
    },
    "Redux action": {
      "prefix": "ract",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "body": ["export function $1($2){", "\treturn function(dispatch){", "\t\t$0", "\t}", "}"],
      "description": "Create a action with dispatch function return"
    },
    "Filename Print": {
      "prefix": "filename",
      "body": "$TM_FILENAME_BASE",
      "description": "Print filename to create classes"
    },
    "Moment epoch": {
      "prefix": "epoch",
      "body": "moment().unix().toString()",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "description": "Create epoch string"
    },
    "Axios get": {
      "prefix": "axg",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "body": "axios.get($1).then(response => {$0}).catch(error => {})",
      "description": "Axios get request"
    },
    "Axios post": {
      "prefix": "axp",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "body": "axios.post($1, $2).then(response => {$0}).catch(error => {})",
      "description": "Axios post request"
    },
    "Import default": {
      "prefix": "imp",
      "body": "import $1 from '$2';",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "description": "Import default"
    },
    "Import named": {
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "prefix": "inm",
      "body": "import { $2 } from '$1';",
      "description": "Import named any"
    },
    "Node required": {
      "prefix": "nrq",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "body": "const $1 = require('$2');",
      "description": "Node import style"
    },
    "Promise": {
      "prefix": "promise",
      "scope": "typescript,javascript,javascriptreact,typescriptreact",
      "description": "Create a new promise",
      "body": ["new Promise((resolve, reject) => {)", "$0", "}"]
    }
  }
