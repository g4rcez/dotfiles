{
	"Print to console": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "clg",
		"body": [
			"console.log($0);",
		],
		"description": "Log output to console"
	},
	"Named import": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "inm",
		"body": [
			"import { $0 } from \"$1\";"
		],
		"description": "Named import"
	},
	"Default import": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "imp",
		"body": [
			"import $0 from \"$1\";"
		],
		"description": "Default import"
	},
	"React useEffect": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "ueh",
		"body": [
			"useEffect(() => {",
			"\t$0",
			"}, ${1:[]})"
		],
		"description": "Apply useEffect React hook"
	},
	"useState": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "ush",
		"body": [
			"const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);"
		],
		"description": "React useState() hook"
	},
	"useRef": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "urh",
		"body": [
			"const $0 = useRef($1);"
		],
		"description": "React useRef() hook"
	},
	"useCallback": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "uch",
		"body": [
			"const ${1:memoizedCallback} = useCallback(",
			"\t() => {",
			"\t\t${0}",
			"\t},",
			"\t[${2}],",
			");"
		],
		"description": "React useCallback() hook"
	},
	"Print file name": {
		"prefix": "filename",
		"body": "${TM_FILENAME_BASE}"
	},
}