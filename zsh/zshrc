##############################################################################################################
## exports
export DOTFILES="$HOME/dotfiles"
export ZSH="$HOME/.zsh/plugins/ohmyzsh/ohmyzsh"
export PLUGINS_DIR="$HOME/.zsh/plugins"
export SNAP_DIR="$PLUGINS_DIR/znap"
export BROWSER="google-chrome"
export AUTO_NOTIFY_BODY="Completed in %elapseds - Exit code %exit_code"
export AUTO_NOTIFY_EXPIRE_TIME=5000
export AUTO_NOTIFY_IGNORE=("vim", "ssh", "st", "fzf", "nvim", "mvim", "neovim", "zshrc")
export AUTO_NOTIFY_THRESHOLD=10000
export AUTO_NOTIFY_TITLE="%command - Finished"
export BUN_INSTALL="$HOME/.bun"
export CASE_SENSITIVE="false"
export DISABLE_UNTRACKED_FILES_DIRTY="true"
export ENABLE_CORRECTION="true"
export GPG_TTY="$(tty)"
export HIST_STAMPS="yyyy-mm-dd"
export HYPHEN_INSENSITIVE="true"
export KEYTIMEOUT=1000
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LC_COLLATE=C
export LESSOPEN='|~/dotfiles/bin/lessfilter.sh %s'
export LS_COLORS="$(vivid -d $DOTFILES/config/vivid/database.yml generate $DOTFILES/config/vivid/theme.yaml)"
export MANPATH="/usr/local/man:$MANPATH"
export PNPM_HOME="$HOME/.local/share/pnpm"
export VOLTA_HOME="$HOME/.volta"
export YSU_MESSAGE_POSITION="after"
export ZELLIJ_AUTO_ATTACH=true
export ZELLIJ_AUTO_EXIT=false
export ZELLIJ_DEFAULT_SESSION="localhost"
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor line regexp)
export ZSH_TMUX_AUTOSTART="true"
export ZSH_TMUX_CONFIG="$DOTFILES/config/tmux/tmux.conf"
export ZSH_TMUX_DEFAULT_SESSION_NAME="localhost"
export ZSH_TMUX_FIXTERM="true"
export BAT_PAGER="less"
export DELTA_PAGER="less -R"
export EDITOR="nvim"
export MANPAGER=""
export PAGER=""
BAT_THEME="Catppuccin Mocha"
if [ -x "$(command -v nvim)" ]; then
  export EDITOR="nvim"
  export MANPAGER="nvim +Man!"
  export PAGER="nvim"
fi

##############################################################################################################
## sources
source $HOME/dotfiles/zsh/utils.sh

local -a PATH_EXPORTS=(
  "/usr/local/bin"
  "$HOME/.cargo/env"
  "$HOME/.local/bin"
  "$HOME/.local/share"
  "$HOME/.local/share/bin"
  "$VOLTA_HOME/bin"
  "$PNPM_HOME"
  "$HOME/.yarn/bin"
  "$HOME/.dotnet"
  "$HOME/.dotnet/tools"
  "$HOME/tools"
  "$HOME/tools/google-cloud-sdk/bin"
  "$HOME/.local/share/JetBrains/scripts"
  "$HOME/.local/share/JetBrains/Toolbox/scripts"
  "$HOME/.config/yarn/global/node_modules/.bin"
  "$BUN_INSTALL/bin"
  "/usr/local/opt/libpq/bin"
  "/opt/homebrew/opt/libpq/bin"
  "$HOME/dotfiles/bin"
)
PATH_RESULT="$PATH"
for path in $PATH_EXPORTS; do
  if [[ -d "$path" ]]; then PATH_RESULT="$PATH_RESULT:$path" fi
done
export PATH="$PATH_RESULT"

##############################################################################################################
## zsh-snap + plugins
[[ -r "$SNAP_DIR/znap.zsh" ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git $SNAP_DIR
source "$SNAP_DIR/znap.zsh"
zstyle ':znap:*' repos-dir $PLUGINS_DIR
zstyle ':znap:*:*' git-maintenance off

local -a PLUGINS=(
    "MichaelAquilina/zsh-auto-notify"
    "MichaelAquilina/zsh-you-should-use"
    "wfxr/forgit"
    "hlissner/zsh-autopair"
    "zsh-users/zsh-autosuggestions"
    "zsh-users/zsh-completions"
    "zsh-users/zsh-history-substring-search"
    "zsh-users/zsh-syntax-highlighting"
)

## fpath - terminal autocomplete
znap fpath _npm     "npm completion"
znap fpath _pnpm    "source $HOME/.config/tabtab/zsh/__tabtab.zsh"
znap fpath _cargo   "rustup completions zsh cargo"
znap fpath _kubectl "kubectl completion zsh"
znap fpath _rustup  "rustup completions zsh"
znap fpath _typeid  "typeid completion zsh"
znap fpath _volta   "volta completions zsh"
znap fpath _zellij  "zellij setup --generate-completion zsh;echo"
znap fpath _n       "source $HOME/dotfiles/bin/node-completion.sh"

FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

for plugin in $PLUGINS; do
  if [[ -d "$PLUGINS_DIR/$plugin" ]]; then
    znap source $plugin || echo "failed -> $plugin"
  else
    znap clone $plugin
  fi
done

zstyle ':omz:update' mode auto
zstyle ':omz:update' frequency 1
znap source ohmyzsh/ohmyzsh lib/{git,bzr,cli,clipboard,compfix,completion,correction,directories,functions,git,grep,history,key-bindings,misc,prompt_info_functions,termsupport,vcs_info}
znap source ohmyzsh/ohmyzsh plugins/{git,npm,yarn,fzf,brew}
znap eval starship "starship init zsh --print-full-init"
znap prompt

##############################################################################################################
## source files
eval "$(zoxide init zsh)"
local -a SOURCE=(
  "$HOME/.fzf.zsh"
  "$HOME/.fzf/shell/key-bindings.zsh"
  "$DOTFILES/bin/fzf-git"
  "$DOTFILES/zsh/fzf.sh"
  "$HOME/.ghcup/env"
  "$HOME/.bun/_bun"
  "$HOME/tools/google-cloud-sdk/path.zsh.inc"
  "$HOME/tools/google-cloud-sdk/completion.zsh.inc"
  "$DOTFILES/zsh/git.sh"
  "$DOTFILES/zsh/alias.sh"
  "$DOTFILES/zsh/node.sh"
  "$DOTFILES/zsh/zellij.sh"
  "$DOTFILES/zsh/zstyle.sh"
  "$PLUGINS_DIR/hlissner/zsh-autopair/autopair.plugin.zsh"
)

##############################################################################################################
## zsh hooks
for config in $SOURCE; do
  if [[ -f "$config" ]]; then source "$config"; fi
done

_zellij_tab_name_update "" "$PWD"

preexec () {
    bash "$DOTFILES/bin/zellij-sessionx-rename" "$2" "$(pwd)"
}

_postcd
chpwd_functions+=(_postcd)
chpwd_functions+=(_zellij_tab_name_update)
zellij-start

