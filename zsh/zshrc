export UID=$(id -u)
export GID=$(id -g)

if [[ $INTELLIJ_ENVIRONMENT_READER ]]; then
    return
fi
##############################################################################################################
## exports
source $HOME/dotfiles/zsh/exports.sh
source $HOME/dotfiles/zsh/utils.sh

local -a PATH_EXPORTS=(
  "/usr/local/bin"
  "/usr/local/opt/libpq/bin"
  "/opt/homebrew/opt/libpq/bin"
  "$HOME/.cargo/env"
  "$HOME/.local/bin"
  "$HOME/.local/share"
  "$HOME/.local/share/bin"
  "$PNPM_HOME"
  "$HOME/.yarn/bin"
  "$HOME/.dotnet"
  "$HOME/.dotnet/tools"
  "$HOME/tools"
  "$HOME/tools/google-cloud-sdk/bin"
  "$HOME/.local/share/JetBrains/scripts"
  "$HOME/.local/share/JetBrains/Toolbox/scripts"
  "$HOME/.config/yarn/global/node_modules/.bin"
  "$BUN_INSTALL/bin"
  "$HOME/dotfiles/bin"
)

PATH_RESULT="$PATH"
for path in $PATH_EXPORTS; do
  if [[ -d "$path" ]]; then PATH_RESULT="$PATH_RESULT:$path" fi
done
export PATH="$PATH_RESULT"

##############################################################################################################
## zsh-snap + plugins
[[ -r "$SNAP_DIR/znap.zsh" ]] ||
    git clone --depth 1 -- "https://github.com/marlonrichert/zsh-snap.git" $SNAP_DIR
source "$SNAP_DIR/znap.zsh"
zstyle ':znap:*' repos-dir $PLUGINS_DIR
zstyle ':znap:*:*' git-maintenance off

local -a PLUGINS=(
    "MichaelAquilina/zsh-auto-notify"
    "MichaelAquilina/zsh-you-should-use"
    "wfxr/forgit"
    "hlissner/zsh-autopair"
    "zsh-users/zsh-autosuggestions"
    "zsh-users/zsh-completions"
    "zsh-users/zsh-history-substring-search"
    "zsh-users/zsh-syntax-highlighting"
)

FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

for plugin in $PLUGINS; do
  if [[ -d "$PLUGINS_DIR/$plugin" ]]; then
    znap source $plugin || echo "failed -> $plugin"
  else
    znap clone $plugin
  fi
done

zstyle ':omz:update' mode auto
zstyle ':omz:update' frequency 1
znap source ohmyzsh/ohmyzsh lib/{git,bzr,cli,clipboard,compfix,completion,correction,directories,functions,git,grep,history,key-bindings,misc}
znap source ohmyzsh/ohmyzsh plugins/fzf
znap eval starship "starship init zsh --print-full-init"
znap prompt

##############################################################################################################
## source files
eval "$(zoxide init zsh)"
eval "$(direnv hook zsh)"
eval "$(mise activate zsh)"
zstyle ':completion:*:*:*' group-order 'main commands' 'alias commands' 'external commands'
source <(carapace _carapace zsh)
source <(carapace chmod zsh)

local -a SOURCE=(
  "$HOME/tools/google-cloud-sdk/path.zsh.inc"
  "$HOME/tools/google-cloud-sdk/completion.zsh.inc"
  "$HOME/.fzf.zsh"
  "$HOME/.fzf/shell/key-bindings.zsh"
  "$HOME/.ghcup/env"
  "$HOME/.bun/_bun"
  "$PLUGINS_DIR/hlissner/zsh-autopair/autopair.plugin.zsh"
  "$DOTFILES/zsh/alias.sh"
  "$DOTFILES/zsh/zstyle.sh"
  "$DOTFILES/zsh/history.sh"
  "$DOTFILES/zsh/fzf.sh"
  "$DOTFILES/bin/fzf-git"
  "$DOTFILES/zsh/git.sh"
  "$DOTFILES/zsh/node.sh"
  "$DOTFILES/zsh/zellij.sh"
)
for config in $SOURCE; do
  if [[ -f "$config" ]]; then source "$config"; fi
done

##############################################################################################################
## fpath hooks

znap fpath _cargo    "rustup completions zsh cargo"
znap fpath _deno     "deno completions zsh"
znap fpath _fx       "source <(fx --comp zsh)"
znap fpath _gitleaks "gitleaks completion zsh"
znap fpath _kubectl  "kubectl completion zsh"
znap fpath _mise     "mise completion zsh"
znap fpath _n        "source $HOME/dotfiles/bin/node-completion.sh"
znap fpath _npm      "npm completion"
znap fpath _pnpm     "pnpm completion zsh"
znap fpath _rustup   "rustup completions zsh"

# zellij-start


