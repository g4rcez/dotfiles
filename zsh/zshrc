export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="vandalvnl"

ENABLE_CORRECTION="true"
HIST_STAMPS="yyyy-mm-dd"
CASE_SENSITIVE="false"
HYPHEN_INSENSITIVE="true"
ZSH_COMMAND_TIME_MSG="%s sec"

plugins=(
  gh
  git
  dirhistory
  command-time
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
source $HOME/dotfiles/zsh/export.sh
source $HOME/dotfiles/zsh/alias.sh

######################### Setup tools #########################

# Google cloud
if [ -f '$HOME/tools/google-cloud-sdk/path.zsh.inc' ]; then . '$HOME/tools/google-cloud-sdk/path.zsh.inc'; fi
if [ -f '$HOME/tools/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/tools/google-cloud-sdk/completion.zsh.inc'; fi

# Nvm
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# dotnet autocomplete
_dotnet_zsh_complete() 
{
  local completions=("$(dotnet complete "$words")")

  # If the completion list is empty, just continue with filename selection
  if [ -z "$completions" ]
  then
    _arguments '*::arguments: _normal'
    return
  fi

  # This is not a variable assignment, don't remove spaces!
  _values = "${(ps:\n:)completions}"
}

compdef _dotnet_zsh_complete dotnet

autoload -Uz compinit
compinit

# zoxide
eval "$(zoxide init zsh)"

