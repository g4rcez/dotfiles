"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t -- https://jb.gg/share-ideavimrc
let mapleader=" "
""""""""""""""""""""""""""""""""""""""""""""" WhichKey """""""""""""""""""""""""""""""
let g:WhichKey_ShowVimActions = "true"
set notimeout
set timeoutlen=5000
set which-key
""""""""""""""""""""""""""""""""""""""""""" Idea things """""""""""""""""""""""""""""""""""""
sethandler n:vim i:vim
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='l'
set ideajoin
set ideamarks
set idearefactormode=keep
set ideastrictmode
set NERDTree
nnoremap <C-t> :NERDTreeFocus<CR>
"""""""""""""""""""""""""""""""""""""""""""" surround """"""""""""""""""""""""""""""""""""""""
set surround
set argtextobj
let g:argtextobj_pairs="(:),{:},<:>"
"""""""""""""""""""""""""""""""""""""""" multiple cursors """"""""""""""""""""""""""""""""""""""""
set multiple-cursors
nmap <C-n> <plug>NextWholeOccurrence
xmap <C-n> <plug>NextWholeOccurrence
nmap g<C-n> <plug>NextOccurrence
xmap g<C-n> <plug>NextOccurrence
xmap <C-x> <plug>SkipOccurrence
xmap <C-p> <plug>RemoveOccurrence
"""""""""""""""""""""""""""""""""""""""" matchit.vim """"""""""""""""""""""""""""""""""""""""
let g:highlightedyank_highlight_color = "rgba(145,126,234,80)"
set matchit
set vim-paragraph-motion
set clipboard=unnamedplus,unnamed,ideaput
set highlightedyank
set ideaput
"""""""""""""""""""""""""""""""""""""""" Don't yank """"""""""""""""""""""""""""""""""""""""
noremap ' "-
nnoremap yy "+yy
vnoremap y "+y
nnoremap p "+p
vnoremap p "+p
nnoremap P "+P
vnoremap P "+P
vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>y "+yy
nmap <leader>p "+p
nmap <leader>P "+P
vmap <leader>p "+p
vmap <leader>P "+P
"""""""""""""""""""""""""""""""""""""""""""""""""""" Commentary """"""""""""""""""""""""""""""""""""""""""""""""""""""""
set commentary
nmap gb <Action>(ShowBookmarks)
nmap gm <Action>(ToggleBookmark)
nmap <leader>ma <Action>(ToggleBookmark)
"""""""""""""""""""""""""""""""""""""""""""""""""""" Vim config """"""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoindent
set autoread
set cmdheight=0
set conceallevel=0
set copyindent
set cursorcolumn
set cursorline
set encoding=utf-8
set expandtab
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set magic
set matchpairs
set mouse=a
set nocompatible
set nrformats
set number relativenumber
set numberwidth=4
set ruler=false
set shiftwidth=4
set showcmd
set showmode=false
set si
set signcolumn=yes
set smartcase
set smartindent
set smarttab
set so=5
set spell
set tabstop=4
set title
set ttyfast
set undodir=~/.ideavim_tmp/undodir
set undofile
set updatetime=100
set viminfo
set visualbell
set whichwrap=b,s,<,>,h,l,[,]
"""""""""""""""""""""""""""""""""""""""""""""" File Operations """""""""""""""""""""""""""""""""""""""""""""""""""""""""
map 0 ^
map Q gq
map U <C-R>
map gh ^
map gl $
map go <Action>(Switcher)
map gp <Action>(FileStructurePopup)
nmap ; :
nmap <leader>1 <Action>(SelectInProjectView)
nmap <leader>P <action>(RecentProjectListGroup)
nmap <leader>T <action>(ReopenClosedTab)
nmap <leader>e <action>(GotoNextError)
nmap <leader>g <action>(Git.Menu)
nmap <leader>q <action>(CloseEditor)
nmap <leader>u <action>(Back)
nmap <leader>z <action>(ToggleDistractionFreeMode)
nmap gt <action>(Run)
vnoremap < <gv
vnoremap > >gv
"""" String manipulation plugin
map <leader>sm <action>(StringManipulation.Group.Main)
map <leader>j <action>(SurroundWithLiveTemplate)
nmap <leader>/ <action>(ShowErrorDescription)
"""""""""""""""""""""""""""" Other keymaps """"""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <S-Enter> O<Esc>
nmap <Enter> o<Esc>
nmap gu <action>(ShowUsages)
nmap gU <action>(FindUsages)
nmap [[ <action>(MethodUp)
nmap ]] <action>(MethodDown)
vnoremap / :action Find<CR>
nnoremap / :action Find<CR>
""""""""""""""""""""""""""""""""""""""""""" Life quality """"""""""""""""""""""""""""""""""""""""""""""""
nnoremap vv V
nnoremap J mzJ`z
"""" Tabs
nnoremap <S-Tab> :action PreviousTab<CR>
nnoremap <Tab> :action NextTab<CR>
"" Split
nmap <leader>- <action>(SplitHorizontally)
nmap <leader>\ <action>(SplitVertically)
"" Move Tabs
nmap <leader>a <action>(PreviousTab)
nmap <leader>d <action>(NextTab)
nmap <leader>h <action>(PreviousTab)
nmap <leader>j <action>(NextTab)
nmap <leader>k <action>(PreviousTab)
nmap <leader>l <action>(NextTab)
nmap <leader>tt :tabo<CR>
vnoremap <leader>ss :sort u<CR>
"""" New files
nnoremap <leader>nf :action NewFile<CR>
""""""""""""""""""""""""""""""""""""""""""""" Folding """""""""""""""""""""""""""""""""""""""
nnoremap zx :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
"""""""""""""""""""""""""""""""""""""""""" Refactor Tools """"""""""""""""""""""""""""""""
nmap <leader>fm <action>(ReformatCode)
nmap <leader><leader> <action>(ReformatCode)
nmap <leader>ra <action>(RenameElement)
nmap <leader>fi <action>(OptimizeImports)
nmap gi <action>(FileStructurePopup)
""" Breakpoint
map <leader>bb <Action>(ToggleLineBreakpoint)
""""""""""""""""""""""""""""""""""""" Leader+f? """"""""""""""""""""""""""""""""
nmap <leader>fd <action>(ShowIntentionActions)
nmap <leader>fa <action>(FindInPath)
nmap <leader>ff <action>(GotoFile)
nmap <leader>fr <action>(ReplaceInPath)
nmap <leader>fs <action>(GotoSymbol)
nmap <leader>fg <action>(AceDeclarationAction)
set easymotion
